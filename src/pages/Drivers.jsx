import React, { useEffect, useState } from "react";
import TableView from "../components/TableView";
import { useNavigate } from "react-router-dom";

export default function Drivers() {
  const navigate = useNavigate();
  const [activeTab, setActiveTab] = useState("lichtrinh"); // tab m·∫∑c ƒë·ªãnh
  const [data, setData] = useState([]);
  const [loading, setLoading] = useState(false);
  const [error, setError] = useState(null);

  // üëâ State ri√™ng cho b√°o c√°o v√† c·∫£nh b√°o (frontend-only)
  const [reports, setReports] = useState([]);
  const [alerts, setAlerts] = useState([]);
  const [reportText, setReportText] = useState("");
  const [alertText, setAlertText] = useState("");

  const tables = [
    { key: "lichtrinh", label: "L·ªãch l√†m vi·ªác" },
    { key: "hocsinh", label: "Danh s√°ch h·ªçc sinh" },
    { key: "baocao", label: "B√°o c√°o t√¨nh tr·∫°ng" },
    { key: "canhbao", label: "C·∫£nh b√°o" },
  ];

  const handleLogout = () => {
    localStorage.removeItem("userRole");
    navigate("/login");
  };

  useEffect(() => {
    // N·∫øu l√† tab b√°o c√°o ho·∫∑c c·∫£nh b√°o th√¨ kh√¥ng fetch API
    if (activeTab === "baocao" || activeTab === "canhbao") return;
    fetchData();
  }, [activeTab]);

  const fetchData = async () => {
    setLoading(true);
    setError(null);
    try {
      const res = await fetch(`http://localhost:5000/api/${activeTab}`);
      if (!res.ok) throw new Error(`L·ªói t·∫£i b·∫£ng ${activeTab}`);
      const result = await res.json();
      setData(result);
    } catch (err) {
      console.error(err);
      setError("Kh√¥ng th·ªÉ t·∫£i d·ªØ li·ªáu t·ª´ m√°y ch·ªß.");
    } finally {
      setLoading(false);
    }
  };

  // === G·ª¨I B√ÅO C√ÅO L√äN SERVER ===
  const handleAddReport = async () => {
    if (!reportText.trim()) return;
    try {
      await fetch("http://localhost:5000/api/baocao", {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify({
          NoiDung: reportText,
          MaNV: "TX01", // ho·∫∑c l·∫•y t·ª´ localStorage t√†i x·∫ø hi·ªán t·∫°i
        }),
      });
      setReportText("");
      alert("‚úÖ G·ª≠i b√°o c√°o th√†nh c√¥ng!");
    } catch (err) {
      console.error("L·ªói g·ª≠i b√°o c√°o:", err);
      alert("‚ùå Kh√¥ng g·ª≠i ƒë∆∞·ª£c b√°o c√°o");
    }
  };

  // === G·ª¨I C·∫¢NH B√ÅO L√äN SERVER ===
  const handleAddAlert = async () => {
    if (!alertText.trim()) return;
    try {
      await fetch("http://localhost:5000/api/canhbao", {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify({
          NoiDung: alertText,
          MaNV: "TX01",
        }),
      });
      setAlertText("");
      alert("üö® G·ª≠i c·∫£nh b√°o th√†nh c√¥ng!");
    } catch (err) {
      console.error("L·ªói g·ª≠i c·∫£nh b√°o:", err);
      alert("‚ùå Kh√¥ng g·ª≠i ƒë∆∞·ª£c c·∫£nh b√°o");
    }
  };

  return (
    <div style={styles.container}>
      <header style={styles.header}>
        <h1 style={styles.title}>
          üöç H·ªá th·ªëng Qu·∫£n l√Ω Smart School Bus - T√†i x·∫ø
        </h1>
        <button onClick={handleLogout} style={styles.logout}>
          ƒêƒÉng xu·∫•t
        </button>
      </header>

      <nav style={styles.nav}>
        {tables.map((t) => (
          <button
            key={t.key}
            style={{
              ...styles.tabButton,
              backgroundColor: activeTab === t.key ? "#16a34a" : "#e2e8f0",
              color: activeTab === t.key ? "white" : "#1e293b",
            }}
            onClick={() => setActiveTab(t.key)}
          >
            {t.label}
          </button>
        ))}
      </nav>

      <main style={styles.main}>
        {/* L·ªãch tr√¨nh v√† h·ªçc sinh d√πng TableView */}
        {(activeTab === "lichtrinh" || activeTab === "hocsinh") && (
          <>
            {loading && <p>‚è≥ ƒêang t·∫£i d·ªØ li·ªáu...</p>}
            {error && <p style={styles.error}>{error}</p>}
            {!loading && !error && (
              <TableView
                title={tables.find((t) => t.key === activeTab)?.label}
                data={data}
                activeTab={activeTab}
                onRefresh={fetchData}
              />
            )}
          </>
        )}

        {/* üìù Tab B√°o c√°o t√¨nh tr·∫°ng */}
        {activeTab === "baocao" && (
          <div style={styles.box}>
            <h3>üìù B√°o c√°o t√¨nh tr·∫°ng</h3>
            <input
              type="text"
              value={reportText}
              onChange={(e) => setReportText(e.target.value)}
              placeholder="Nh·∫≠p n·ªôi dung b√°o c√°o..."
              style={styles.input}
            />
            <button onClick={handleAddReport} style={styles.addBtn}>
              G·ª≠i b√°o c√°o
            </button>
            <ul style={styles.list}>
              {reports.map((r) => (
                <li key={r.id}>üìã {r.text}</li>
              ))}
            </ul>
          </div>
        )}

        {/* ‚ö†Ô∏è Tab C·∫£nh b√°o */}
        {activeTab === "canhbao" && (
          <div style={styles.box}>
            <h3>‚ö†Ô∏è C·∫£nh b√°o s·ª± c·ªë</h3>
            <input
              type="text"
              value={alertText}
              onChange={(e) => setAlertText(e.target.value)}
              placeholder="Nh·∫≠p n·ªôi dung c·∫£nh b√°o..."
              style={styles.input}
            />
            <button onClick={handleAddAlert} style={styles.addBtn}>
              G·ª≠i c·∫£nh b√°o
            </button>
            <ul style={styles.list}>
              {alerts.map((a) => (
                <li key={a.id}>üö® {a.text}</li>
              ))}
            </ul>
          </div>
        )}
      </main>
    </div>
  );
}

const styles = {
  container: {
    padding: "30px",
    fontFamily: "Poppins, sans-serif",
    background: "#f8fafc",
    minHeight: "100vh",
  },
  header: {
    display: "flex",
    justifyContent: "space-between",
    alignItems: "center",
    marginBottom: "20px",
  },
  title: { fontSize: "1.8rem", color: "#16a34a" },
  logout: {
    background: "#ef4444",
    color: "white",
    border: "none",
    borderRadius: "8px",
    padding: "8px 14px",
    cursor: "pointer",
  },
  nav: { display: "flex", flexWrap: "wrap", gap: "10px", marginBottom: "20px" },
  tabButton: {
    padding: "10px 16px",
    border: "none",
    borderRadius: "6px",
    cursor: "pointer",
    fontSize: "0.95rem",
    fontWeight: 500,
    transition: "0.2s",
  },
  main: { marginTop: "10px" },
  box: {
    background: "white",
    padding: "20px",
    borderRadius: "10px",
    boxShadow: "0 2px 8px rgba(0,0,0,0.1)",
  },
  input: {
    width: "80%",
    padding: "8px",
    marginRight: "10px",
    borderRadius: "6px",
    border: "1px solid #cbd5e1",
  },
  addBtn: {
    background: "#16a34a",
    color: "white",
    border: "none",
    padding: "8px 12px",
    borderRadius: "6px",
    cursor: "pointer",
  },
  list: { marginTop: "15px", listStyle: "none", paddingLeft: "0" },
  error: {
    color: "red",
    background: "#fee2e2",
    padding: "10px",
    borderRadius: "8px",
  },
};
